name: Daily Content Generation - Simple & Reliable

on:
  schedule:
    # Run at 1:00 AM UTC daily (9:00 AM China time)
    - cron: '0 1 * * *'
  workflow_dispatch:
    inputs:
      article_count:
        description: 'Number of articles to generate'
        required: false
        default: '1'
        type: string
      force_generation:
        description: 'Force generation even if recent articles exist'
        required: false
        default: false
        type: boolean

permissions:
  contents: write

jobs:
  generate-content:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create environment file
        run: |
          echo "GOOGLE_ADSENSE_ID=${{ secrets.GOOGLE_ADSENSE_ID }}" >> .env
          echo "AMAZON_AFFILIATE_TAG=${{ secrets.AMAZON_AFFILIATE_TAG }}" >> .env
          echo "GOOGLE_ANALYTICS_ID=${{ secrets.GOOGLE_ANALYTICS_ID }}" >> .env

      - name: Check if generation needed
        id: check_needed
        run: |
          if [ "${{ github.event.inputs.force_generation }}" = "true" ]; then
            echo "should_generate=true" >> $GITHUB_OUTPUT
            echo "reason=forced" >> $GITHUB_OUTPUT
          else
            recent_count=$(find content/articles -name "*.md" -mtime -1 2>/dev/null | wc -l)
            if [ "$recent_count" -eq 0 ]; then
              echo "should_generate=true" >> $GITHUB_OUTPUT
              echo "reason=no_recent_articles" >> $GITHUB_OUTPUT
            else
              echo "should_generate=false" >> $GITHUB_OUTPUT
              echo "reason=recent_articles_exist" >> $GITHUB_OUTPUT
            fi
          fi

      - name: Generate articles
        if: steps.check_needed.outputs.should_generate == 'true'
        run: |
          python scripts/generate_daily_content.py \
            --count "${{ github.event.inputs.article_count || '1' }}" \
            --output-dir content/articles

      - name: Quality check
        if: steps.check_needed.outputs.should_generate == 'true'
        run: |
          python scripts/quality_check.py content/articles/

      - name: Commit new content
        if: steps.check_needed.outputs.should_generate == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          git add content/articles/*.md
          
          if ! git diff --staged --quiet; then
            current_date=$(date '+%Y-%m-%d')
            git commit -m "Auto: Daily content update - $current_date

ðŸ¤– Generated with Claude Code AI Assistant

Co-Authored-By: Claude <noreply@anthropic.com>"
            git push
          fi

      - name: Send Telegram notification
        if: always()
        run: |
          if [ "${{ secrets.TELEGRAM_BOT_TOKEN }}" != "" ] && [ "${{ secrets.TELEGRAM_CHAT_ID }}" != "" ]; then
            python scripts/notify_telegram.py \
              --type daily_content \
              --status "${{ job.status }}" \
              --generated "${{ steps.check_needed.outputs.should_generate }}" \
              --reason "${{ steps.check_needed.outputs.reason }}"
          fi